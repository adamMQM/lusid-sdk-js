/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1380
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class TransactionConfigurationTypeAlias {
    /**
    * The transaction type
    */
    'type': string;
    /**
    * Brief description of the transaction
    */
    'description': string;
    /**
    * Relates types of a similar class. E.g. Buy/Sell, StockIn/StockOut
    */
    'transactionClass': string;
    /**
    * Group is a set of codes related to a source, or sync
    */
    'transactionGroup': string;
    /**
    * Transactions role within a class. E.g. Increase a long position
    */
    'transactionRoles': TransactionConfigurationTypeAlias.TransactionRolesEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "transactionClass",
            "baseName": "transactionClass",
            "type": "string"
        },
        {
            "name": "transactionGroup",
            "baseName": "transactionGroup",
            "type": "string"
        },
        {
            "name": "transactionRoles",
            "baseName": "transactionRoles",
            "type": "TransactionConfigurationTypeAlias.TransactionRolesEnum"
        }    ];

    static getAttributeTypeMap() {
        return TransactionConfigurationTypeAlias.attributeTypeMap;
    }
}

export namespace TransactionConfigurationTypeAlias {
    export enum TransactionRolesEnum {
        None = <any> 'None',
        LongLonger = <any> 'LongLonger',
        LongShorter = <any> 'LongShorter',
        ShortShorter = <any> 'ShortShorter',
        ShortLonger = <any> 'ShortLonger',
        Longer = <any> 'Longer',
        Shorter = <any> 'Shorter',
        AllRoles = <any> 'AllRoles'
    }
}
