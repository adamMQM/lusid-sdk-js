/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1386
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PerpetualProperty } from './perpetualProperty';
import { TargetTaxLotRequest } from './targetTaxLotRequest';

/**
* This request specifies target holdings. i.e. holding data that the  system should match. When processed by the movement  engine, it will create \'true-up\' adjustments on the fly.
*/
export class AdjustHoldingRequest {
    /**
    * A set of instrument identifiers to use to resolve the holding adjustment to a unique instrument.
    */
    'instrumentIdentifiers': { [key: string]: string; };
    /**
    * Set of unique transaction properties and associated values to store with the holding adjustment transaction automatically created by LUSID. Each property must be from the \'Transaction\' domain.
    */
    'subHoldingKeys'?: { [key: string]: PerpetualProperty; };
    /**
    * Set of unique holding properties and associated values to store with the target holding. Each property must be from the \'Holding\' domain.
    */
    'properties'?: { [key: string]: PerpetualProperty; };
    /**
    * The tax-lots that together make up the target holding.
    */
    'taxLots': Array<TargetTaxLotRequest>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "instrumentIdentifiers",
            "baseName": "instrumentIdentifiers",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "subHoldingKeys",
            "baseName": "subHoldingKeys",
            "type": "{ [key: string]: PerpetualProperty; }"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "{ [key: string]: PerpetualProperty; }"
        },
        {
            "name": "taxLots",
            "baseName": "taxLots",
            "type": "Array<TargetTaxLotRequest>"
        }    ];

    static getAttributeTypeMap() {
        return AdjustHoldingRequest.attributeTypeMap;
    }
}

