/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1381
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ResourceId } from './resourceId';

export class CreatePropertyDefinitionRequest {
    /**
    * The domain that the property exists in.
    */
    'domain': CreatePropertyDefinitionRequest.DomainEnum;
    /**
    * The scope that the property exists in.
    */
    'scope': string;
    /**
    * The code of the property. Together with the domain and scope this uniquely identifies the property.
    */
    'code': string;
    /**
    * Whether or not a value is always required for this property.
    */
    'valueRequired'?: boolean;
    /**
    * The display name of the property.
    */
    'displayName': string;
    'dataTypeId': ResourceId;
    /**
    * Describes how the property\'s values can change over time.
    */
    'lifeTime'?: CreatePropertyDefinitionRequest.LifeTimeEnum;
    /**
    * Describes the uniqueness and cardinality of the property for entity objects under the property domain specified in Key. Defaults to \"Property\" if not specified.
    */
    'constraintStyle'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "domain",
            "baseName": "domain",
            "type": "CreatePropertyDefinitionRequest.DomainEnum"
        },
        {
            "name": "scope",
            "baseName": "scope",
            "type": "string"
        },
        {
            "name": "code",
            "baseName": "code",
            "type": "string"
        },
        {
            "name": "valueRequired",
            "baseName": "valueRequired",
            "type": "boolean"
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string"
        },
        {
            "name": "dataTypeId",
            "baseName": "dataTypeId",
            "type": "ResourceId"
        },
        {
            "name": "lifeTime",
            "baseName": "lifeTime",
            "type": "CreatePropertyDefinitionRequest.LifeTimeEnum"
        },
        {
            "name": "constraintStyle",
            "baseName": "constraintStyle",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return CreatePropertyDefinitionRequest.attributeTypeMap;
    }
}

export namespace CreatePropertyDefinitionRequest {
    export enum DomainEnum {
        NotDefined = <any> 'NotDefined',
        Transaction = <any> 'Transaction',
        Portfolio = <any> 'Portfolio',
        Holding = <any> 'Holding',
        ReferenceHolding = <any> 'ReferenceHolding',
        TransactionConfiguration = <any> 'TransactionConfiguration',
        Instrument = <any> 'Instrument',
        CutLabelDefinition = <any> 'CutLabelDefinition',
        Analytic = <any> 'Analytic',
        PortfolioGroup = <any> 'PortfolioGroup',
        Person = <any> 'Person',
        AccessMetadata = <any> 'AccessMetadata',
        Order = <any> 'Order',
        UnitResult = <any> 'UnitResult',
        MarketData = <any> 'MarketData',
        ConfigurationRecipe = <any> 'ConfigurationRecipe',
        Allocation = <any> 'Allocation'
    }
    export enum LifeTimeEnum {
        Perpetual = <any> 'Perpetual',
        TimeVariant = <any> 'TimeVariant'
    }
}
