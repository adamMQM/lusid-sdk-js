/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1392
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Link } from './link';
import { Property } from './property';
import { ResourceId } from './resourceId';

/**
* A list of portfolios.
*/
export class PortfolioSearchResult {
    'id': ResourceId;
    /**
    * The type of the portfolio.
    */
    'type': PortfolioSearchResult.TypeEnum;
    /**
    * The specific Uniform Resource Identifier (URI) for this resource at the requested effective and asAt datetime.
    */
    'href'?: string;
    /**
    * The long form description of the portfolio.
    */
    'description'?: string;
    /**
    * The name of the portfolio.
    */
    'displayName': string;
    /**
    * Whether or not this is a derived portfolio.
    */
    'isDerived'?: boolean;
    /**
    * The effective datetime at which the portfolio was created. No transactions or constituents can be added to the portfolio before this date.
    */
    'created': Date;
    'parentPortfolioId'?: ResourceId;
    /**
    * The base currency of the portfolio. This will be an empty string for reference portfolios.
    */
    'baseCurrency'?: string;
    /**
    * The requested portfolio properties. These will be from the \'Portfolio\' domain.
    */
    'properties'?: Array<Property>;
    'links'?: Array<Link>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "ResourceId"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PortfolioSearchResult.TypeEnum"
        },
        {
            "name": "href",
            "baseName": "href",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string"
        },
        {
            "name": "isDerived",
            "baseName": "isDerived",
            "type": "boolean"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date"
        },
        {
            "name": "parentPortfolioId",
            "baseName": "parentPortfolioId",
            "type": "ResourceId"
        },
        {
            "name": "baseCurrency",
            "baseName": "baseCurrency",
            "type": "string"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "Array<Property>"
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>"
        }    ];

    static getAttributeTypeMap() {
        return PortfolioSearchResult.attributeTypeMap;
    }
}

export namespace PortfolioSearchResult {
    export enum TypeEnum {
        Transaction = <any> 'Transaction',
        Reference = <any> 'Reference',
        DerivedTransaction = <any> 'DerivedTransaction'
    }
}
